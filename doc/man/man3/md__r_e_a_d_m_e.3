.TH "md__r_e_a_d_m_e" 3 "Fri May 1 2015" "DataStructures" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md__r_e_a_d_m_e \- Data Structures 

.SS "Usage"
.PP
Since this project contains mostly libraries, you can just add them to your C++ projects and include them\&. In some cases, like the \fBDijkstra\fP algorithm, the libraries come with an example to be run with\&. Since they are standard C++ you can also compile and run\&. 
.SS "What are data structures?"
.PP
In computer science, a data structure is a particular way of organizing data in a computer so that it can be used efficiently\&. _\fCWikipedia\fP_\&.
.PP
This is the product of a university course on Data Structures and Algorithms\&.
.PP
Basic data structures include:
.IP "\(bu" 2
Arrays
.IP "\(bu" 2
Lists
.IP "\(bu" 2
Dictionaries
.IP "\(bu" 2
Queues
.IP "\(bu" 2
Stacks
.IP "\(bu" 2
Trees
.IP "\(bu" 2
Hashes
.IP "\(bu" 2
Graphs
.PP
.PP
.SS "Shortest Path algorithm"
.PP
The folder ShortestPath contains an implementation of the \fCDijkstra algorithm\fP, used to find the shortest path in a weighted graph\&. It reads a file with two strings: node 1, and node 2, separated by a blank space between them, and followed by a number; the weight of going from node 1 from node 2\&. The graph gets saved in an adjacency matrix, which is not at all memory efficient, but was selected as a visualization method for learning the algorithm\&.
.PP
.RS 4
.SS "NOTE:"
.PP
.RE
.PP
This is a semestral work in progress, so there will be some movement for the next months\&. 
